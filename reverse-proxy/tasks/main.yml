---
# tasks file for reverse-proxy
- name: Create docker network
  become: true
  community.docker.docker_network:
    name: 00-caddy # Get first name in lexical order for network priority
    driver_options:
      com.docker.network.bridge.name: caddy

- name: Create volume base
  become: true
  ansible.builtin.file:
    path: /docker/caddy
    mode: "0700"
    state: directory
    owner: root
    group: root

- name: Create volumes
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    mode: "0700"
    state: directory
    owner: "{{ userns_root_uid|int + proxy_uid|int }}"
    group: "{{ userns_root_uid|int + proxy_gid|int }}"
  loop:
    - /docker/caddy/data
    - /docker/caddy/etc

- name: Copy config files
  become: true
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/docker/caddy/etc/"
    mode: "0600"
    owner: "{{ userns_root_uid|int + proxy_uid|int }}"
    group: "{{ userns_root_uid|int + proxy_gid|int }}"
  with_fileglob:
    - "*"
    
- name: Create container
  become: true
  community.docker.docker_container:
    name: caddy
    image: caddy:latest
    restart_policy: always
    state: started
    pull: true
    cap_drop:
      - all
    capabilities:
      - net_bind_service
    user: "{{ proxy_uid }}:{{ proxy_gid }}"
    ports:
      - "[::]:80:8080"
      - "[::]:443:8443"
      - "0.0.0.0:80:8080"
      - "0.0.0.0:443:8443"
    networks:
      - name: 00-caddy
      - name: nextcloud
      - name: transmission
    volumes: "{{ proxy_volumes + [ '/docker/caddy/data:/data', '/docker/caddy/etc:/etc/caddy' ] }}"
