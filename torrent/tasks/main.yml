- name: Set sysctl values
  become: true
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  loop:
    - { name: net.core.rmem_max, value: "{{ transmission_rmem_max }}" }
    - { name: net.core.wmem_max, value: "{{ transmission_wmem_max }}" }

- name: Create docker network
  become: true
  community.docker.docker_network:
    name: "{{ transmission_bridge_name }}"
    ipam_config:
      - subnet: "{{ transmission_network_subnet }}"
    driver_options:
      com.docker.network.bridge.name: "{{ transmission_bridge_name }}"
 
- name: Create docker volume
  become: true
  ansible.builtin.file:
    path: "{{ transmission_vol_base }}"
    mode: "700"
    state: directory
    owner: "{{ transmission_vol_uid }}"
    group: "{{ transmission_vol_gid }}"

- name: Add routing table
  register: routingtable
  become: true
  ansible.builtin.lineinfile:
    path: /etc/iproute2/rt_tables
    line: "2 torrent"

- name: Copy route ruleset
  become: true
  notify: "Restart networking"        
  ansible.builtin.template:
    src: "{{ transmission_route_template }}"
    dest: "/etc/systemd/network/{{ systemd_network_config }}.network.d/torrent.conf"
    mode: "644" 
    
- name: Create transmission container
  become: true
  community.docker.docker_container:
    name: "{{ transmission_container_name }}"
    image: "{{ transmission_docker_image }}"
    user: "{{ transmission_uid }}:{{ transmission_uid }}"
    restart_policy: always
    state: started
    pull: false
    networks:
      - name: "{{ transmission_bridge_name }}"
        ipv4_address: "{{ transmission_network_ipv4_address }}"
    cap_drop:
      - all
    volumes:
      - "{{ transmission_vol_base }}:{{ transmission_vol_mount_point }}"
      - "{{ media_vol_base }}:{{ media_mount_point }}"
    env:
      CONFIG_DIR: "{{ transmission_vol_mount_point }}"

- name: Install wireguard packages
  become: true
  apt:
    pkg:
      - wireguard
      - jq
      
- name: Copy wireguard script
  become: true
  register: wireguardscript
  ansible.builtin.template:
    src: mahoneko-wg.sh
    dest: /usr/local/bin/
    mode: "700"

- name: Copy wireguard credentials
  become: true
  register: wireguardconfig
  ansible.builtin.copy:
    src: login.conf
    dest: /etc/wireguard/
    mode: "600"

- name: Copy systemd service
  become: true
  register: wireguardservice
  ansible.builtin.copy:
    src: wg-mahoneko.service
    dest: /etc/systemd/system/
    mode: "644"
    
- name: Enable wireguard service
  become: true
  ansible.builtin.systemd:
    name: wg-mahoneko.service
    daemon_reload: "{{ wireguardservice.changed }}"
    enabled: true
    state: "{{ 'restarted' if wireguardconfig.changed or wireguardscript.changed else 'started' }}"
