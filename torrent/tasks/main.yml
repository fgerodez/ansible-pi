- name: Set sysctl values
  become: true
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  loop:
    - { name: net.core.rmem_max, value: "{{ transmission_rmem_max }}" }
    - { name: net.core.wmem_max, value: "{{ transmission_wmem_max }}" }

- name: Create docker network
  become: true
  community.docker.docker_network:
    name: "{{ transmission_bridge_name }}"
 
- name: Create docker volume
  become: true
  ansible.builtin.file:
    path: "{{ transmission_vol_base }}"
    mode: 0700
    state: directory
    owner: "{{ transmission_vol_uid }}"
    group: "{{ transmission_vol_gid }}"

- name: Set transmission config
  become: true
  ansible.builtin.lineinfile: 
    dest: "{{ transmission_vol_base }}/settings.json"
    line: "{{ item }}"
    create: true
    mode: 0600
    owner: "{{ transmission_vol_uid }}"
    group: "{{ transmission_vol_gid }}"
  with_items:
    - '{'
    - '"rpc-whitelist-enabled": false,'
    - '"rpc-host-whitelist-enable": true,'
    - '"rpc-host-whitelist": "{{ transmission_hostname }}"'
    - '"download-dir": "{{ transmission_download_dir }}",'
    - '"encryption": 2'
    - '}'

- name: Add routing table
  register: routingtable
  become: true
  ansible.builtin.lineinfile:
    path: /etc/iproute2/rt_tables
    line: "2 torrent"

- name: Copy route ruleset
  register: routingrules
  become: true
  ansible.builtin.template:
    src: "{{ transmission_route_template }}"
    dest: "/etc/systemd/network/{{ systemd_network_config }}.network.d/torrent.conf"
    mode: 0644
    
- name: Restart networking
  become: true
  ansible.builtin.systemd:
    name: systemd-networkd.service
    state: "restarted"
  when: routingtable.changed or routingrules.changed
    
- name: Create transmission container
  become: true
  community.docker.docker_container:
    name: "{{ transmission_container_name }}"
    image: "{{ transmission_docker_image }}"
    user: "{{ transmission_uid }}:{{ transmission_uid }}"
    restart_policy: always
    state: started
    pull: true
    networks:
      - name: "{{ transmission_bridge_name }}"
    cap_drop:
      - all
    volumes:
      - "{{ transmission_vol_base }}:{{ transmission_vol_mount_point }}"
      - "{{ media_vol_base }}:{{ transmission_media_dir }}"
    env:
      CONFIG_DIR: "{{ transmission_vol_mount_point }}"
  
