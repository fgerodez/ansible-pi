---
# tasks file for torrent
- name: Create docker network
  become: true
  community.docker.docker_network:
    name: "{{ transmission_bridge_name }}"
    driver_options:
      com.docker.network.bridge.name: "{{ transmission_bridge_name }}"

- name: Create volume base
  become: true
  ansible.builtin.file:
    path: "{{ torrent_vol_base }}"
    mode: "0770"
    state: directory
    owner: "{{ userns_root_uid }}"
    group: "{{ userns_root_uid|int + media_gid }}"

- name: Create data folder
  become: true
  ansible.builtin.file:
    path: "{{ torrent_vol_base }}/data"
    mode: "0770"
    state: directory
    owner: "{{ userns_root_uid }}"
    group: "{{ userns_root_uid|int + media_gid }}"

- name: Create transmission folder
  become: true
  ansible.builtin.file:
    path: "{{ torrent_vol_base }}/transmission"
    mode: "0700"
    state: directory
    owner: "{{ userns_root_uid|int + transmission_uid }}"
    group: "{{ userns_root_uid|int + transmission_uid }}"

- name: Set transmission config
  become: true
  ansible.builtin.lineinfile: 
    dest: "{{ torrent_vol_base }}/transmission/settings.json"
    line: "{{ item }}"
    create: true
    mode: "0600"
    owner: "{{ userns_root_uid|int + transmission_uid }}"
    group: "{{ userns_root_uid|int + transmission_uid }}"
  with_items:
    - '{'
    - '"rpc-whitelist-enabled": false,'
    - '"rpc-password": "{{ transmission_rpc_password }}",'
    - '"rpc-username": "{{ transmission_rpc_username }}",'
    - '"rpc-authentication-required": true,'
    - '"download-dir": "/media/data/downloads",'
    - '"encryption": 2'
    - '}'

- name: Add torrent routing table
  register: routingtable
  become: true
  ansible.builtin.lineinfile:
    path: /etc/iproute2/rt_tables
    line: "2 torrent"

- name: Copy route ruleset
  register: routingrules
  become: true
  ansible.builtin.template:
    src: "./data/torrent/torrent-route.network.j2"
    dest: "/etc/systemd/network/90-torrent.network"
    mode: "0644"
    
- name: Restart networking
  become: true
  ansible.builtin.systemd:
    name: systemd-networkd.service
    state: "restarted"
  when: routingtable.changed or routingrules.changed
    
- name: Create transmission container
  become: true
  community.docker.docker_container:
    name: "{{ transmission_container_name }}"
    image: "mahoneko/transmission:latest"
    user: "{{ transmission_uid }}:{{ media_gid }}"
    restart_policy: always
    state: started
    pull: true
    networks:
      - name: "{{ transmission_bridge_name }}"
    cap_drop:
      - all
    volumes:
      - "{{ torrent_vol_base }}:/media"
