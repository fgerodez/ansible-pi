---
# tasks file for caddy
- name: Create docker network
  become: true
  community.docker.docker_network:
    name: "{{ caddy_network_name }}"
    enable_ipv6: yes
    ipam_config:
      - subnet: "{{ caddy_network_ipv6_subnet }}"
    driver_options:
      com.docker.network.bridge.name: "{{ caddy_bridge_name }}"
      com.docker.network.bridge.inhibit_ipv4: "true"

- name: Create volume base
  become: true
  ansible.builtin.file:
    path: "{{ caddy_vol_base }}"
    mode: 0700
    state: directory
    owner: root
    group: root

- name: Create volumes
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    mode: 0700
    state: directory
    owner: "{{ caddy_host_uid }}"
    group: "{{ caddy_host_gid }}"
  loop:
    - "{{ caddy_vol_data }}"
    - "{{ caddy_vol_config }}"

- name: Copy config file
  become: true
  notify: "Restart caddy"
  ansible.builtin.copy:
    src: Caddyfile
    dest: "{{ caddy_vol_config }}"
    mode: 0600
    owner: "{{ caddy_host_uid }}"
    group: "{{ caddy_host_gid }}"

- name: Copy reverse proxy configs
  become: true
  notify: "Restart caddy"
  ansible.builtin.template:
    src: reverse.caddy.j2
    dest: "{{ caddy_vol_config}}/{{ item.hostname }}.caddy"
    mode: 0600
    owner: "{{ caddy_host_uid }}"
    group: "{{ caddy_host_gid }}"
  loop: "{{ caddy_proxies }}"
    
- name: Create container
  become: true
  community.docker.docker_container:
    name: "{{ caddy_docker_container }}"
    image: "{{ caddy_docker_image }}"
    restart_policy: always
    state: started
    pull: true
    cap_drop:
      - all
    capabilities:
      - net_bind_service
    user: "{{ caddy_uid }}:{{ caddy_gid }}"
    networks:
      - name: "{{ caddy_network_name }}"
        ipv6_address: "{{ caddy_ipv6_address }}"
    volumes:
      - "{{ caddy_vol_data }}:{{ caddy_mount_data }}"
      - "{{ caddy_vol_config }}:{{ caddy_mount_config }}"
