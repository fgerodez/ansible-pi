---
# tasks file for mariadb
- name: Check root password
  ansible.builtin.fail:
    msg: The root password is mandatory
  when: mariadb_root_password is undefined

- name: Create docker network
  become: true
  community.docker.docker_network:
    name: mariadb
    ipam_config:
      - subnet: "{{ mariadb_subnet }}"
    driver_options:
      com.docker.network.bridge.name: "{{ mariadb_bridge_name }}"
      com.docker.network.bridge.enable_ip_masquerade: false

- name: Create data volumes
  become: true
  ansible.builtin.file:
    path: "{{ item.path }}"
    mode: '0755'
    state: directory
    owner: "{{ userns_root_uid|int + mariadb_uid|int }}"
    group: "{{ userns_root_uid|int + mariadb_gid|int }}"
  loop:
    - { path: "{{ mariadb_vol_data }}" }
    - { path: "{{ mariadb_vol_dumps }}" }
          
- name: Copy dump
  become: true
  ansible.builtin.copy:
    src: "{{ mariadb_local_dumps }}"
    dest: "{{ mariadb_vol_dumps }}"
  when: mariadb_local_dumps is defined
              
- name: Set up docker container
  become: true
  community.docker.docker_container:
    name: mariadb
    image: "mariadb:{{ mariadb_version }}"
    user: "{{ mariadb_uid }}:{{ mariadb_gid }}"
    restart_policy: always
    cap_drop:
      - all
    networks:
      - name: "{{ mariadb_container_name }}"
        ipv4_address: "{{ mariadb_ipv4 }}"
    state: started
    volumes:
      - "{{ mariadb_vol_data }}:/var/lib/mysql"
      - "{{ mariadb_vol_dumps }}:/docker-entrypoint-initdb.d:ro"
    env:
      MARIADB_ROOT_PASSWORD: "{{ mariadb_root_password }}"

- name: Create users
  no_log: true
  community.mysql.mysql_user:
    login_host: "{{ mariadb_ipv4 }}"
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    host: "%"
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    priv: "{{ item.priv }}"
    state: present
  loop: "{{ mariadb_users }}"
    
