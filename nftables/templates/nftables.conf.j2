#!/usr/sbin/nft -f

flush ruleset

# set of interfaces with masquerated ipv4 traffic
define MASQUERADE = {
    "radarr",
	"sonarr",
	"prowlarr",
	"mail",
	"{{ service_transmission_network }}"
}

# set of interfaces with forwarded traffic
define FORWARD = {
    "radarr",
	"sonarr",
	"prowlarr",
	"mail",
	"nextcloud"
}

table inet filter {
    chain postrouting {
        type nat hook postrouting priority srcnat;

		# masquerades ipv4 outgoing traffic
        meta nfproto ipv4 iifname $MASQUERADE masquerade
    }

	chain prerouting {
		type nat hook prerouting priority dstnat;

		# transfers traffic to postfix for port 25 ipv4 and ipv6
		ip daddr {{ local_ip }} tcp dport 25 dnat to {{ service_mail_postfix_ipv4_address }}:2525
		ip6 daddr {{ local_ipv6 }} tcp dport 25 dnat to [{{ service_mail_postfix_ipv6_address }}]:2525

		# transfers traffic to postfix for port 587 ipv4 and ipv6
		ip daddr {{ local_ip }} tcp dport 587 dnat to {{ service_mail_postfix_ipv4_address }}:25587
		ip6 daddr {{ local_ipv6 }} tcp dport 587 dnat to [{{ service_mail_postfix_ipv6_address }}]:25587

		# transfers traffic to dovecot for port 4190
		ip daddr {{ local_ip }} tcp dport 4190 dnat to {{ service_mail_dovecot_ipv4_address }}
		ip6 daddr {{ local_ipv6 }} tcp dport 4190 dnat to {{ service_mail_dovecot_ipv6_address }}

		# transfers traffic to dovecot for port 993
		ip daddr {{ local_ip }} tcp dport 993 dnat to {{ service_mail_dovecot_ipv4_address }}:10993
		ip6 daddr {{ local_ipv6 }} tcp dport 993 dnat to [{{ service_mail_dovecot_ipv6_address }}]:10993

		# transfers wireguard incoming traffic to transmission container
		# uses iifname instead of iff here because the wireguard interface can be recreated frequently.
		meta nfproto ipv4 iifname "{{ service_transmission_wg_interface }}" dnat to {{ service_transmission_ipv4_address }}
    }

    chain input {
        type filter hook input priority 0; policy drop

        # allows established/related connections
        ct state {established, related} accept

        # drops invalid connections
        ct state invalid drop

        # allows loopback
        iifname lo accept

        # allows icmp and local ipv4
        ip protocol icmp accept
        ip saddr {{ local_subnet }} accept

        # allows ipv6 local peers
        ip6 saddr fe80::/10 accept

		# allows icmpv6 (Neighbor Discovery ND)
	    meta l4proto ipv6-icmp accept

        # allows http(s) on ipv4/6 
        tcp dport { http, https } accept

		# allows ssh on ipv6 only
        meta nfproto ipv6 tcp dport { {{ ssh_port }} } accept
    }

    chain forward {
        type filter hook forward priority 0; policy drop

		# allows dnat connections
		ct status dnat accept

        # allows established connections
        ct state {related,established} accept

		# disables forwarding to local ipv4 network
		ip daddr {{ local_subnet }} drop

		# allows internet access for all interfaces in the set
		iifname $FORWARD oif "{{ interface }}" accept

		# allows wireguard access for transmission
		# uses oifname instead of oif because the wireguard interface can be destroyed / recreated
		iifname "{{ service_transmission_network }}" oifname "{{ service_transmission_wg_interface }}" accept
    }
}
