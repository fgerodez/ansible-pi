#!/usr/sbin/nft -f

flush ruleset

table inet filter {
    chain postrouting {
        type nat hook postrouting priority srcnat;

		# masquerades ipv4 outgoing traffic
        meta nfproto ipv4 oifname {{ nftables_masquerade_networks }} masquerade
    }

	chain prerouting {
		type nat hook prerouting priority dstnat;

		# transfers traffic to postfix for port 25 ipv4 and ipv6
		ip daddr {{ nftables_host_ipv4 }} tcp dport 25 dnat to {{ nftables_postfix_ipv4 }}:2525
		ip6 daddr {{ nftables_host_ipv6 }} tcp dport 25 dnat to [{{ nftables_postfix_ipv6 }}]:2525

		# transfers traffic to postfix for port 587 ipv4 and ipv6
		ip daddr {{ nftables_host_ipv4 }} tcp dport 587 dnat to {{ nftables_postfix_ipv4 }}:25587
		ip6 daddr {{ nftables_host_ipv6 }} tcp dport 587 dnat to [{{ nftables_postfix_ipv6 }}]:25587

		# transfers traffic to dovecot for port 4190
		ip daddr {{ nftables_host_ipv4 }} tcp dport 4190 dnat to {{ nftables_dovecot_ipv4 }}
		ip6 daddr {{ nftables_host_ipv6 }} tcp dport 4190 dnat to {{ nftables_dovecot_ipv6 }}

		# transfers traffic to dovecot for port 993
		ip daddr {{ nftables_host_ipv4 }} tcp dport 993 dnat to {{ nftables_dovecot_ipv4 }}:10993
		ip6 daddr {{ nftables_host_ipv6 }} tcp dport 993 dnat to [{{ nftables_dovecot_ipv6 }}]:10993

		# transfers traffic to reverse proxy for port 80
		ip daddr {{ nftables_host_ipv4 }} tcp dport 80 dnat to {{ nftables_caddy_ipv4 }}:8080
		ip6 daddr {{ nftables_host_ipv6 }} tcp dport 80 dnat to [{{ nftables_caddy_ipv6 }}]:8080

		# transfers traffic to reverse proxy for port 443
		ip daddr {{ nftables_host_ipv4 }} tcp dport 443 dnat to {{ nftables_caddy_ipv4 }}:8443
		ip6 daddr {{ nftables_host_ipv6 }} tcp dport 443 dnat to [{{ nftables_caddy_ipv6 }}]:8443
		
		# transfers wireguard incoming traffic to transmission container
		# uses iifname instead of iff here because the wireguard interface can be recreated frequently.
		meta nfproto ipv4 iifname {{ nftables_torrent_wg }} dnat to {{ nftables_torrent_ipv4 }}

		# marks transmission outgoing packets to route them through wireguard via ip rule
		ip saddr {{ nftables_torrent_ipv4 }} ip daddr != {{ nftables_caddy_ipv4 }} meta mark set {{ nftables_torrent_traffic_mark }}
    }

    chain input {
        type filter hook input priority 0; policy drop

        # allows established/related connections
        ct state { established, related } accept

        # drops invalid connections
        ct state invalid drop

        # allows loopback
        iifname lo accept

        # allows icmp and local ipv4
        ip protocol icmp accept
        ip saddr {{ nftables_host_ipv4_subnet }} accept

        # allows ipv6 local peers
        ip6 saddr fe80::/10 accept

		# allows icmpv6 (Neighbor Discovery ND)
	    meta l4proto ipv6-icmp accept

		# allows specified ports on ipv6 only
        meta nfproto ipv6 tcp dport {{ nftables_allow_ipv6_ports }} accept
    }

    chain forward {
        type filter hook forward priority 0; policy drop

		# allows dnat connections
		ct status dnat accept

        # allows established connections
        ct state { related, established } accept

		# disables forwarding to local ipv4 network
		ip daddr {{ nftables_host_ipv4_subnet }} drop

		# allows internet access for specified networks
		iifname {{ nftables_internet_networks }} oif {{ nftables_host_interface }} accept

		# allows caddy access to reverse proxied network
		iifname {{ nftables_caddy_network }} oifname {{ nftables_reverse_proxied_networks }} accept

		# allows wireguard access for transmission
		iifname {{ nftables_torrent_interface }} oifname {{ nftables_torrent_wg }} accept
    }
}
